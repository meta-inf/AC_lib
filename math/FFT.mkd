输入系数向量 `A[0 .. n - 1] (n = 2^k)`，  
计算 `B[i] = eval(A, w_i)`，其中 `w_i ^n = 1`, 且`w_i = w_1 ^ i`。

## NTT

在模形如 `P = a2^b + 1` 的素数意义下计算。e.g. `a = 15, b = 27 (g = 137)`  
原根 `g` 满足 `g^{P - 1} = 1 (mod P)`, 所以取 `w_1 = g^{(P - 1) / n}` 满足要求。  
顺便注意到如果设 `w_n(i)` 为长度为 `n` 的序列所用的第 `i` 个 `w` 的话，`w_{n}(2i) = w_{n/2}(i)`。

设`w = w_i`，`w'` 为长度为 `n/2` 的序列中使用的第 `i` 个 `w`，于是`w' = w^2`。于是对于 `i < n/2`，  
`B[i] = A[0]w^0 + A[1]w^1 + A[2]w^2 + A[3]w^3 + ..
     = (A[0]w^0 + A[2]w^2 + A[4]w^4 + ..) + w(A[1]w^0 + A[3]w^2 + A[5]w^4 + ..)
     = (A[0]w'^0 + A[2]w'^1 + A[4]w'^2 + ..) + w(A[1]w'^0 + A[3]w'^1 + A[5]w'^2 + ..)
     = B'_0[i] + wB'_1[i]`
。  
对于 `i > n/2`，由于 `w_i = w_{i-n/2} * -1`，可以化出 `B[i] = B'_0[i-n/2] - wB'_1[i-n/2]`。  
`NlogN`。

## DFT^{-1}

可以发现 DFT 过程相当于用矩阵 `M` 与向量 `A` 相乘，其中 `M[i, j] = w_i ^ j`。

容易发现`M^{-1}[i, j] = 1/n w_i ^ {-j}`，所以在 DFT 中将 `w` 换为 `w^{-1}` 即可。容易验证单位根的性质仍然得到满足。

## 应用

+ 卷积：给定向量`A, B`，计算`C[i] = sum(A[j]B[i-j])`
	+ 循环卷积：计算`C[i] = sum(A[j]B[k] : (j+k)=i (mod N))`  
	  考虑`2N`次的多项式`A * B`在自变量为`Z_N`的`N`次单位根的值。  
	  由于`w^n = 1`，它与`C`在这`N`个数下的求值是相同的。  
	  取`P=N`进行一次DFT。
		+ CTSC10 Optimize

+ 
